"""Add cost control tables

Revision ID: 5b2f2bc6cefd
Revises: 02c4f9202d5c
Create Date: 2025-07-29 03:56:09.789287

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5b2f2bc6cefd'
down_revision: Union[str, None] = '02c4f9202d5c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # BudgetSettings 表
    op.create_table('budget_settings',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('budget_type', sa.String(length=20), nullable=False),
        sa.Column('amount', sa.DECIMAL(precision=20, scale=6), nullable=False),
        sa.Column('currency', sa.String(length=10), nullable=False),
        sa.Column('alert_threshold', sa.Float(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_budget_user_type', 'budget_settings', ['user_id', 'budget_type'], unique=False)
    
    # ModelPricing 表
    op.create_table('model_pricing',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('model_name', sa.String(length=100), nullable=False),
        sa.Column('provider', sa.String(length=50), nullable=False),
        sa.Column('input_price_per_1k', sa.DECIMAL(precision=10, scale=6), nullable=False),
        sa.Column('output_price_per_1k', sa.DECIMAL(precision=10, scale=6), nullable=False),
        sa.Column('currency', sa.String(length=10), nullable=False),
        sa.Column('effective_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_model_pricing_active', 'model_pricing', ['model_name', 'provider', 'is_active'], unique=False)
    
    # Achievement 表
    op.create_table('achievements',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('description', sa.String(length=500), nullable=False),
        sa.Column('icon', sa.String(length=100), nullable=True),
        sa.Column('criteria', sa.JSON(), nullable=False),
        sa.Column('points', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    
    # UserAchievement 表
    op.create_table('user_achievements',
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('achievement_id', sa.UUID(), nullable=False),
        sa.Column('progress', sa.Float(), nullable=False),
        sa.Column('unlocked_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('is_notified', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('user_id', 'achievement_id')
    )
    op.create_index('idx_user_achievements_unlocked', 'user_achievements', ['user_id', 'unlocked_at'], unique=False)
    
    # ModelStrategy 表
    op.create_table('model_strategies',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('strategy_type', sa.String(length=50), nullable=False),
        sa.Column('model_preferences', sa.JSON(), nullable=False),
        sa.Column('cost_threshold', sa.DECIMAL(precision=10, scale=6), nullable=True),
        sa.Column('quality_threshold', sa.Float(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_model_strategy_user', 'model_strategies', ['user_id', 'is_active'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_model_strategy_user', table_name='model_strategies')
    op.drop_table('model_strategies')
    op.drop_index('idx_user_achievements_unlocked', table_name='user_achievements')
    op.drop_table('user_achievements')
    op.drop_table('achievements')
    op.drop_index('idx_model_pricing_active', table_name='model_pricing')
    op.drop_table('model_pricing')
    op.drop_index('idx_budget_user_type', table_name='budget_settings')
    op.drop_table('budget_settings')
    # ### end Alembic commands ###
